<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.MemberDao">

	<!-- 회원가입 -->
	<insert id="logininsert" parameterType="member">
		insert into member
		values(#{memail},#{mpw},#{mname},#{mphone},#{mage},#{mgender},#{maddress},#{mcareer},
		#{meducation},#{mmajor},#{mcertification},#{mlang},#{mdb},sysdate(),default)
	</insert>

	<!-- 로그인 -->
	<select id="dbselectone" resultType="member">
		select * from
		member where
		memail = #{memail} and mdrop = 'N'
	</select>

	<!-- 회원수정 -->
	<update id="updatemember" parameterType="member">
		update member set
		memail=#{memail},
		mpw=#{mpw},
		mname=#{mname},
		mphone=#{mphone},
		mage=#{mage},
		mgender=#{mgender},
		maddress=#{maddress},
		mcareer=#{mcareer},
		meducation=#{meducation},
		mmajor=#{mmajor},
		mcertification=#{mcertification},
		mlang=#{mlang},
		mdb=#{mdb},
		mreg=sysdate(),
		mdrop= default
		where memail=#{memail}
	</update>

	<!-- 회원탈퇴 -->
	<update id="deletemember" parameterType="member">
		update member set mdrop
		= 'Y' where memail = #{memail}
	</update>

	<!-- memail 리뷰 가져오기 -->
	<select id="selectreview" resultType="review" parameterType="map">
		SELECT *
		FROM review
		WHERE memail = #{memail} AND rdrop = 'N'
		ORDER BY rreg DESC
		LIMIT #{start}, 10;
	</select>
	
	<!-- 리뷰 갯수 -->
	<select id="reviewcount" resultType="int">
		select count(*) from review
		where rconfirm = 'N' and rdrop = 'N'
	</select>
	
	<!-- memail qna 가져오기 -->
	<select id="qnaselect" resultType="qna" parameterType="map">
		select * from qna where memail = #{memail} and qdrop = 'N'
		ORDER BY qreg DESC
		LIMIT #{start}, 10;
	</select>
	
	<!-- qna 페이징 -->
	<select id="qnacount" resultType="int">
		select count(*) from qna
		where qdrop = 'N'
	</select>
	
	<!-- feedback 페이징 -->
	<select id="fbcount" resultType="int">
		select count(*) from feedback where fdrop = 'N'
	</select>
	
	<!-- memail feedback 가져오기 -->
	<select id="fbselect" resultType="feedback" parameterType="map">
		select * from feedback where memail = #{memail} and fdrop = 'N'
		order by freg desc 
		limit #{start}, 10;
	</select>
	
	<!-- 커뮤니티 페이징 -->
	<select id="ccount" resultType="int">
		select count(*) from community where cdrop = 'N'
	</select>
	
	<!-- 커뮤니티 가져오기  -->
	<select id="cselect" resultType="community" parameterType="map">
		select * from community where memail = #{memail} and cdrop = 'N'
		order by creg desc 
		limit #{start}, 10
	</select>
	
	<!-- 이력서 select(memail)  -->
	<select id="psselect" resultType="personalstatement">
		select * from personalstatement where memail = #{memail}
	</select>	
	
	<!-- 성장과정 select(memail) 최근 글 -->
	<select id="ggselect" resultType="gptgrow" parameterType="list">
		select * from gptgrow where memail = #{memail} order by gptgid desc limit 2
	</select>
	
	<!-- 성격장단점 select(memail) 최근 글 -->
	<select id="gcselect" resultType="gptcharacter" parameterType="list">
		select * from gptcharacter where memail = #{memail} order by gptcid desc limit 2
	</select>
	
	<!-- 지원동기 select(memail) 최근 글  -->
	<select id="gmselect" resultType="gptmotive" parameterType="list">
		select * from gptmotive where memail = #{memail} order by gptmid desc limit 2
	</select>
	
	<!-- 입사후포부 select(memail) 최근 글 -->
	<select id="gpselect" resultType="gptplan" parameterType="list">
		select * from gptplan where memail = #{memail} order by gptpid desc limit 2
	</select>
	
	<!-- gid로 성장과정 가져오기 -->
	<select id="gptgrow" parameterType="String" resultType="gptgrow">
		select * from gptgrow where gptgid = #{gptgid}
	</select>
	
	<!-- 이력서에 gptgrow가 없을 시 insert  -->
	<insert id="insertGptgrow" parameterType="Map">
		insert into personalstatement values(null,#{gid},#{memail},#{psgcontent},null,null,null,now())
	</insert>
	
	<!-- 이력서에 gptgrow가 있을 시 update -->
	<update id="updateGptgrow" parameterType="Map">
		update personalstatement set psgcontent = #{psgcontent} , psreg = now() where memail = #{memail}
	</update>
	
	
	<select id="selectps" parameterType="String" resultType="personalstatement">
	 	select * from personalstatement where pid = #{pid}
	</select>
	
	<!-- 이력서 gptgrow 직접 수정 -->
	<update id="psgupdate" parameterType="Map">
		update personalstatement set psgcontent = #{psgcontent} , psreg = now() where pid = #{pid}
	</update>
	
	<!-- cid로 성격장단점 가져오기 -->
	<select id="gptcharacter" parameterType="String" resultType="gptcharacter">
		select * from gptcharacter where gptcid = #{gptcid}
	</select>
	
	<!-- 이력서에 Gptcharacter가 없을 시 insert  -->
	<insert id="insertGptcharacter" parameterType="map">
		insert into personalstatement values(null,#{gid},#{memail},null,#{psccontent},null,null,now())
	</insert>
	
	<!-- 이력서에 Gptcharacter가 있을 시 update  -->
	<update id="updateGptcharacter" parameterType="map">
		update personalstatement set psccontent = #{psccontent} , psreg = now() where memail = #{memail}
	</update>
	
	<!-- 이력서 gptcharacter 직접 수정 -->
	<update id="pscupdate" parameterType="map">
		update personalstatement set psccontent = #{psccontent} , psreg = now() where pid = #{pid}
	</update>
	
	<!-- mid로 지원동기 가져오기 -->
	<select id="gptmotive" parameterType="String" resultType="gptmotive">
		select * from gptmotive where gptmid = #{gptmid}
	</select>
	
	<!-- 이력서에 gptmotive가 없을 시 insert -->
	<insert id="insertgptmotive" parameterType="map">
		insert into personalstatement values(null,#{gid},#{memail},null,null,#{psmcontent},null,now())
	</insert>
	
	<!-- 이력서에 gptmotive가 있을 시 update  -->
	<update id="updategptmotive" parameterType="map">
		update personalstatement set psmcontent = #{psmcontent},psreg = now() where memail = #{memail}
	</update>
	
	<!-- 이력서 gptmotive 직접 수정 -->
	<update id="psmupdate" parameterType="map">
		update personalstatement set psmcontent = #{psmcontent} , psreg = now() where pid = #{pid}
	</update>
	
	<!-- pid로 지원동기 가져오기 -->
	<select id="gptplan" parameterType="String" resultType="gptplan">
		select * from gptplan where gptpid = #{gptpid}
	</select>
	
	<!-- 이력서에 gptmotive가 없을 시 insert -->
	<insert id="insertgptplan" parameterType="map">
		insert into personalstatement values(null,#{gid},#{memail},null,null,null,#{pspcontent},now())
	</insert>
	
	<!-- 이력서에 gptmotive가 있을 시 insert -->
	<update id="updategptplan" parameterType="map">
		update personalstatement set pspcontent = #{pspcontent},psreg = now() where memail = #{memail}
	</update>
	
	<!-- 이력서 gptplan 직접 수정 -->
	<insert id="pspupdate" parameterType="map">
		update personalstatement set pspcontent = #{pspcontent} , psreg = now() where pid = #{pid}
	</insert>
	
</mapper>
